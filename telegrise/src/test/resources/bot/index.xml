<?xml version="1.0" encoding="UTF-8" ?>

<?import org.telegrise.telegrise.bot.controllers.StartController ?>
<bot token='#env("BOT_TOKEN")' autoCommands="true" interruptions="true" sessionType="user">
    <head>
        <link src="*"/>
    </head>

    <roles>
        <role name="admin" level="100" onDeniedTree="DeniedTree"/>
        <role name="user" level="0" onDeniedTree="DeniedTree"/>
    </roles>

    <root>
        <tree name="StartTree" command="start" description="Start test bot" controller="StartController" accessLevel="0">
            <send disablePreview="true">
                <text byName="StartText"/>
                <keyboard type="reply" resize="true">
                    <row>
                        <button accessLevel="100">Test admin</button>
                        <button>Test all action</button>
                    </row>
                    <row>
                        <button>Jump to media groups</button>
                        <button>Test handlers</button>
                    </row>
                    <row>
                        <button>Test keyboard</button>
                        <button>Test exception</button>
                    </row>
                    <row>
                        <button>Calculator App</button>
                    </row>
                </keyboard>
            </send>

            <branch key="Test exception">
                <send>Throwing exception, check your terminal!</send>
                <invoke method="#throwException"/>
                <transition type="back"/>
            </branch>
            <branch key="Jump to media groups">
                <transition type="jump" target="MediaGroupsTree" execute="true"/>
            </branch>
        </tree>

        <tree name="TestKeyboard" key="Test keyboard" accessLevel="0" controller="TestKeyboardController">
            <send returnConsumer='::register("mainMenu")'>
                <text>Removing reply keyboard...</text>
                <keyboard create="#replyKeyboardRemove"/>
            </send>
            <send returnConsumer='::register("mainMenu")' name="send">
                <text>Here is your dynamic keyboard:</text>
                <keyboard name="MainKeyboard" type="inline">
                    <row>
                        <button data="button1">${#button1}</button>
                        <button data="button2">${#button2}</button>
                    </row>
                    <row><button data="disable">Disable me</button></row>
                    <row><switch name="switch" on="Switch: On" off="Switch: Off"/></row>
                    <row>
                        <button data="back">‚Üê Go back</button>
                    </row>
                </keyboard>
            </send>

            <branch when='::callbackMatches("button\\d+")' invoke="#incrementButton">
                <edit>
                    <keyboard byName="MainKeyboard"/>
                </edit>
                <transition type="back"/>
            </branch>
            <branch callback="disable" invoke="#disableButton">
                <transition type="back" edit="send"/>
            </branch>
            <branch callback="switch">
                <flip keyboard="MainKeyboard" switch="switch"/>
                <transition type="back" edit="send"/>
            </branch>
            <branch callback="back">
                <delete registry="mainMenu"/>
                <transition type="jump" target="StartTree" execute="true"/>
            </branch>
        </tree>
        <tree name="TestAdmin" key="Test admin" accessLevel="-100" controller="TestAdminController">
            <send>
                <text>Choose your role (or /start to return):</text>
                <keyboard type="inline">
                    <row>
                        <button data="previous">‚óÑ</button>
                        <button data="ignore">${#currentRole}</button>
                        <button data="next">‚ñ∫</button>
                    </row>
                </keyboard>
            </send>

            <branch when="#nextRole -> #notNull" invoke="#nextRole -> #setRole">
                <transition type="back" edit="first"/>
            </branch>

            <default when="#isCallback">
                <answer text="üõë"/>
            </default>
        </tree>

        <tree name="DeniedTree">
            <send>Sorry, your request was denied</send>
        </tree>
    </root>
</bot>