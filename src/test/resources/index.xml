<?xml version="1.0" encoding="UTF-8" ?>

<?import org.telegram.telegrise.utils.MessageUtils ?>
<?import org.telegram.telegrise.SimpleController ?>
<?import org.telegram.telegrise.SimpleController$ChildController ?>
<bot token='#env("BOT_TOKEN")' autoCommands="true" interruptions="true" sessionType="chat">
    <head>
        <link src="test/*"/>
        <!-- <token>${#env("BOT_TOKEN")}</token> -->
    </head>

    <roles>
        <role name="admin" level="100" onDeniedTree="denied"/>
        <role name="secondary" accessibleTrees="startTree" level="0" onDeniedTree="denied"/>
        <role name="unauthorised" level="-1" onDeniedTree="denied"/>
    </roles>

    <root>
        <send>
            <text parseMode="markdown">Menu</text>
        </send>
        <tree name="startTree" command="start" description="Start" accessLevel="0"
              predicate="SimpleController#getTrue AND SimpleController#checkStart"
                controller="SimpleController">
            <keyboards>
                <keyboard name="startKeyboard" type="reply" resize="true">
                    <row><button accessLevel="1">First Button</button></row>
                    <row><button>Second Button</button></row>
                </keyboard>
            </keyboards>
            <actionGroup when='#memory("hello") == true'>
                <send returnConsumer='::register("name")'>ABC</send>
                <send returnConsumer='::register("name")'>1</send>
                <send returnConsumer='::register("name")'>2</send>
            </actionGroup>
            <send>
                <text name="startText" global="true" conditional="true">
                    <if condition="#isHello" textblock="true">
                        Hello! <code>User</code>

                            How&#160;can I help you?

                        ${SimpleController#isHello} ${#memory("hello") -> #not -> ::store("hello")}
                        ${memory.get("test")}
                    </if>
                    <else>
                        Hello again!
                        ${#helloText}


                        ${(SimpleController#isHello, " - ", SimpleController#isHello) -> #concat}
                    </else>
                </text>
                <keyboard byName="startKeyboard"/>
            </send>
        </tree>
        <tree name="copyStartText" command="copy_start_text" description="Test for text loading by name" accessLevel="0">
            <delete registry="name"/>
            <send>
                <text byName="startText"/>
            </send>
        </tree>
        <tree name="testMediaCollector" command="test_media_collector" description="Test for media collector" controller="ChildController"  accessLevel="0" >
            <send>
                Send mediagroup
            </send>
            <branch when="#isMediagroup">
                <send>
                    <mediaGroup inputMedia="#duplicateMedias"/>
                </send>
            </branch>
            <default>
                <send>
                    It's not a mediagroup
                </send>
            </default>
        </tree>
        <tree name="testMedia" command="test_media" description="Test for media tag" controller="SimpleController" accessLevel="0" >
            <send>
                <media sendMethod="#createSendMethod"/>
            </send>
            <branch when="true">
                <send>Bye!</send>
            </branch>
        </tree>
        <tree name="testError" command="test_error" description="Tests error" accessLevel="0">
            <send>
                ${#todo}
            </send>
        </tree>
        <tree name="denied">
            <send>Sorry, your request was denied</send>
        </tree>
        <tree name="name" callback="callback-data" key="first; second" command="example"
              controller="SimpleController" description="test" accessLevel="0" allowedInterruptions="none">
            <keyboards>
                <keyboard name="firstt" type="inline">
                    <row><button data="first">First</button></row>
                    <row><button data="second">Second</button></row>
                    <row><button data="disableMe">Disable Me!</button></row>
                    <row><switch name="switch" off="Off" on="On" prefix=""/></row>
                    <row><button data="testAnimation">Test Animation</button></row>
                </keyboard>
            </keyboards>
            <send>${#concat("Hi", "World")}</send>
            <send returnConsumer='${System.out.println("Returned: " + message.getText());}'>
                <text byName="HelloText"/>
            </send>
            <branch name="point" when="${update.hasMessage() &amp;&amp; controller.check()}" allowedInterruptions="all">
                <chatAction action="typing"/>
                <wait timeout="3" listener="#getWarnListener"/>
                <send name="send">
                    <photo when="#doSendPhoto" url="https://i0.wp.com/www.alphr.com/wp-content/uploads/2022/09/ikaw-lang-1.png"/>
                    <text>Hi, ${MessageUtils.getFrom(update).getFirstName()}</text>
                    <keyboard name="custom" byName="firstt" />
                </send>

                <branch when="#predicate -> #not -> #not">
                    <send>
                        <photo fileId="${update.getMessage().getPhoto().get(0).getFileId()}"/>
                        <text parseMode="html"><b>Bye</b></text>
                    </send>
                </branch>
                <branch when='::callback("first")' invoke="#send; #log; SimpleController#printHello">
                    <transition direction="back" target="root" execute="true"/>
                </branch>
                <branch callback="second">
                    <transition direction="jump" target="toBeCalled" execute="true"/>
                </branch>
                <branch callback="disableMe">
                    <invoke method="#disableButton"/>
                    <answer text="Done!"/>
                    <transition direction="back" edit="send"/>
                </branch>
                <branch callback="switch">
                    <flip keyboard="custom" switch="switch"/>
                    <transition direction="back" edit="first"/>
                </branch>
                <branch callback="testAnimation">
                    <animate period="0.5" loops="5" parallel="false">
                        <frame>Loading /</frame>
                        <frame>Loading -</frame>
                        <frame>Loading \</frame>
                        <frame>Loading |</frame>
                    </animate>
                    <send>Done!</send>
                    <transition direction="back" execute="true"/>
                </branch>
                <default>
                    <send>Wrong</send>
                </default>
            </branch>
        </tree>
        <tree name="toBeCalled" accessLevel="0">
            <send>
                <text>Jumped to Tree</text>
                <keyboard type="inline">
                    <row><button data="back">Back</button></row>
                    <row><button data="1">1</button></row>
                </keyboard>
            </send>
            <branch callback="back">
                <transition direction="caller" execute="true"/>
            </branch>
            <branch callback="1" name="initial">
                <edit source="callback">
                    <text>1</text>
                    <keyboard type="inline">
                        <row><button data="2">2</button></row>
                    </keyboard>
                </edit>
                <transition direction="back"/>
            </branch>
            <branch callback="2">
                <edit source="callback">
                    <text>2</text>
                    <keyboard type="inline">
                        <row><button data="1">1</button></row>
                    </keyboard>
                </edit>
                <transition direction="back" execute="false"/>
            </branch>
        </tree>
        <default when="${MessageUtils.getChat(update).isUserChat()}">
            <send>Don't get it</send>
        </default>
    </root>
</bot>
